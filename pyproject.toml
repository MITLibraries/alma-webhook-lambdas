[project]
name = ""
version = "0.0.1"
requires-python = "~=3.12.0"
dependencies = [
    "boto3",
    "requests",
    "sentry-sdk",
]

[tool.black]
line-length = 90

[dependency-groups]
dev = [
    "black",
    "boto3-stubs[essential]",
    "coverage",
    "freezegun",
    "mypy",
    "pre-commit",
    "pytest",
    "requests-mock",
    "ruff",
    "types-requests",
    "typing-extensions",
    "pytest-mock",
    "pip-audit",
]

[tool.mypy]
disallow_untyped_calls = true
disallow_untyped_defs = true
exclude = ["tests/"]

[tool.uv]
package = false

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple"

[tool.pytest.ini_options]
log_level = "INFO"
markers = [
    "unit: unit tests",
    "integration: integration tests"
]

[tool.ruff]
target-version = "py312"

# set max line length
line-length = 90

# enumerate all fixed violations
show-fixes = true

[tool.ruff.lint]
select = ["ALL", "PT"]

ignore = [
    # default
    "ANN101", 
    "ANN102", 
    "COM812", 
    "D107", 
    "N812", 
    "PTH", 

    # project-specific
    "D100",
    "D103",
    "D104",
    "G002"
]

# allow autofix behavior for specified rules
fixable = ["E", "F", "I", "Q"]

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = [
    "ANN",
    "ARG001",
    "S101",
    "S105"
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 90

[tool.ruff.lint.pydocstyle]
convention = "google"
